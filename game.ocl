import 'model/generated/PrototypeExplo.ecore'

package prototypeExplo

context PathID
def: getPath() : Path =
	MainMap.allInstances() -> asSequence()->first()
		-> select (path | path.name = self)
		-> collect(path | path.oclAsType(Path))
		-> asSequence()
		-> first()
		
context NPCID
def: getNPC() : NPC =
	MainMap.allInstances() -> asSequence()->first()
		-> select (npc | npc.name = self)
		-> collect(npc | npc.oclAsType(NPC))
		-> asSequence()
		-> first()

		
context ItemID
def: getItem() : Item =
	MainMap.allInstances() -> asSequence()->first()
		-> select (item | item.name = self)
		-> collect(item | item.oclAsType(Item))
		-> asSequence()
		-> first()

/* E6 Le nombre d’objets que peut posséder un explorateur est limité par la taille cumulée des objets possédés. */
context Explorer
inv maxSizeItem : self.maxSize >= self.items-> iterate(item; sum:Integer = 0 | sum + item.getItem().size)

/* E17 Il ne peut y avoir qu’un seul chemin obligatoire visible et ouvert par lieu. */
context Place
inv oneOVOPath : self.paths-> one(path |path.getPath().obligatoryCondition and path.getPath().visibleCondition and path.getPath().openedCondition)

/* E26 : Il ne peut y avoir qu’une seule personne obligatoire par lieu. */
context Place
inv oneObligatoryNpc : self.NPCs -> one(npc | npc.getNPC().obligatoryCondition = true)


endpackage
